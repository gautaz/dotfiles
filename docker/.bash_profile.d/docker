#!/usr/bin/env bash
function dmenv() {
	if [[ $# -eq 0 ]]; then
		(cat | tr -s '\n') <<-EOE
		${DOCKER_TLS_VERIFY:+DOCKER_TLS_VERIFY=${DOCKER_TLS_VERIFY}}
		${DOCKER_CERT_PATH:+DOCKER_CERT_PATH=${DOCKER_CERT_PATH}}
		${DOCKER_MACHINE_NAME:+DOCKER_MACHINE_NAME=${DOCKER_MACHINE_NAME}}
		${DOCKER_HOST:+DOCKER_HOST=${DOCKER_HOST}}
		EOE
	else
		case "$1" in
			-c|--clear)
				unset DOCKER_TLS_VERIFY
				unset DOCKER_CERT_PATH
				unset DOCKER_MACHINE_NAME
				unset DOCKER_HOST
				;;
			-h|--help)
				cat <<- EOH
				Usage: dmenv [OPTIONS] [ENV_NAME]
				Sets the current docker environment to ENV_NAME.
				Prints the current docker environment if no argument is provided.

				Available options:
				-c|--clear) ensure docker commands use the localhost
				-h|--help) displays this help page
				-l|--list) lists available docker environments
				EOH
				;;
			-l|--list)
				if command -v docker-machine >& /dev/null; then
					docker-machine ls -q
				fi
				if command -v minikube >& /dev/null; then
					echo "minikube"
				fi
				;;
			*)
				if [ "$1" = "minikube" ] && command -v minikube >& /dev/null; then
					eval $(minikube docker-env)
				elif command -v docker-machine >& /dev/null; then
					eval "$(docker-machine env "$1")"
				fi
				;;
		esac
	fi
}
export -f dmenv

function docker() {
	case "$1" in
		tags)
			shift
			docker run --rm gautaz/docker-tags "$@"
			;;
		*)
			command docker "$@"
			;;
	esac
}
export -f docker

function netshoot() {
	local args=opt
	local opt=()
	local cmd=()
	while [[ $# -gt 0 ]]; do
		case "$1" in
			--)
				if [[ "${args}" = "opt" ]]; then
					args=cmd
				else
					cmd+=("$1")
				fi
				;;
			*)
				if [[ "${args}" = "opt" ]]; then
					opt+=("$1")
				else
					cmd+=("$1")
				fi
				;;
		esac
		shift
	done
	docker run --rm -it "${opt[@]}" nicolaka/netshoot "${cmd[@]}"
}
export -f netshoot
