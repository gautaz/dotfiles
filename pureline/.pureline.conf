# Full example config for PureLine using default powerline symbols
# and custom 256 color

# Colors must be defined in pairs of FG & BG
PL_COLORS[MyOrange]='\[\e[38;5;221m\]'
PL_COLORS[On_MyOrange]='\[\e[48;5;221m\]'

PL_COLORS[MyLime]='\[\e[38;5;157m\]'
PL_COLORS[On_MyLime]='\[\e[48;5;157m\]'

PL_COLORS[MyYellow]='\[\e[38;5;229m\]'
PL_COLORS[On_MyYellow]='\[\e[48;5;229m\]'

PL_COLORS[MyLightGrey]='\[\e[38;5;252m\]'
PL_COLORS[On_MyLightGrey]='\[\e[48;5;252m\]'

PL_COLORS[MyBlue]='\[\e[38;5;51m\]'
PL_COLORS[On_MyBlue]='\[\e[48;5;51m\]'

PL_COLORS[MyRed]='\[\e[38;5;198m\]'
PL_COLORS[On_MyRed]='\[\e[48;5;198m\]'

PL_COLORS[MyDarkGrey]='\[\e[38;5;244m\]'
PL_COLORS[On_MyDarkGrey]='\[\e[48;5;244m\]'

PL_COLORS[MyPurple]='\[\e[38;5;91m\]'
PL_COLORS[On_MyPurple]='\[\e[48;5;91m\]'

PL_COLORS[MyGreen]='\[\e[38;5;49m\]'
PL_COLORS[On_MyGreen]='\[\e[48;5;49m\]'

function gautaz_host_segment {
    local bg_color="$1"
    local fg_color="$2"
    local content="\h"
    PS1+="$(segment_end "$fg_color" "$bg_color")"
    PS1+="$(segment_content "$fg_color" "$bg_color" " $content ")"
    __last_color="$bg_color"
}

function gautaz_screen_segment {
    if [[ "$TERM" == screen[.-]* && -n $STY ]]; then
        local bg_color="$1"
        local fg_color="$2"
        local sty="${STY#*.}"
        local content=" ${PL_SYMBOLS[screen]} ${sty%.*}"
        PS1+="$(segment_end "$fg_color" "$bg_color")"
        PS1+="$(segment_content "$fg_color" "$bg_color" "$content ")"
        __last_color="$bg_color"
    fi
}

function gautaz_kubectl_segment {
    if kubectl_loc="$(type -p "kubectl")" || [[ -n $kubectl_loc ]]; then
        local context=$(kubectl config current-context 2> /dev/null)
        if [ -n "$context" ]; then
            local bg_color=$1                  # Set the background color
            local fg_color=$2                  # Set the foregropund color
            local kubesymbol=$'\xE2\x8E\x88'
            local content="${kubesymbol} ${context}"
            PS1+=$(segment_end "$fg_color" "$bg_color")
            PS1+=$(segment_content "$fg_color" "$bg_color" " $content ")
            __last_color=$bg_color
        fi
    fi
}

# All segments are enabled. Uncomment/comment to enable/disable a segment
PL_SEGMENTS=(
    # segment                Background  Foreground
    'return_code_segment     MyRed       White'
    'background_jobs_segment MyPurple    White'
    'time_segment            MyLightGrey Black'
    'battery_segment         MyYellow    Black'
    'gautaz_host_segment     MyLime      Black'
    'gautaz_screen_segment   MyLightGrey Black'
    'gautaz_kubectl_segment  MyLime      Black'
    'newline_segment'
    'read_only_segment       MyRed       White'
    'path_segment            MyBlue      Black'
    'git_segment             MyGreen     Black'
    'newline_segment'
    'prompt_segment          MyDarkGrey  White'
)

# segment Options
PL_PATH_TRIM=0             # 0 Full path, 1, Current, 2+ trim level
PL_TIME_SHOW_SECONDS=true
PL_USER_SHOW_HOST=true
PL_USER_USE_IP=false
PL_SSH_SHOW_HOST=true
PL_SSH_USE_IP=true
PL_GIT_DIRTY_FG=Black
PL_GIT_DIRTY_BG=MyOrange
PL_GIT_AHEAD=true
PL_GIT_MODIFIED=true
PL_GIT_STAGED=true
PL_GIT_CONFLICTS=true
PL_GIT_UNTRACKED=true
PL_GIT_STASH=true
PL_PROMPT_ROOT_BG=Red
PL_PROMPT_ROOT_FG=White

# redefine symbols using powerline glyphs
PL_SYMBOLS[hard_separator]='ÓÇ∞'
# PL_SYMBOLS[soft_separator]='ÓÇ±'
PL_SYMBOLS[soft_separator]="$(echo -e '\b')"

PL_SYMBOLS[git_branch]='ÓÇ†'
PL_SYMBOLS[git_untracked]='Ô§í'
PL_SYMBOLS[git_stash]='Ôßã'
PL_SYMBOLS[git_ahead]='Ô¶´'
PL_SYMBOLS[git_behind]='Ô¶™'
PL_SYMBOLS[git_modified]='Ô§ë'
PL_SYMBOLS[git_staged]='Ô©º'
PL_SYMBOLS[git_conflicts]='Ô¶û'

PL_SYMBOLS[read_only]='ÓÇ¢'
PL_SYMBOLS[return_code]='Ô•ô'
PL_SYMBOLS[background_jobs]='Ô©ì'

PL_SYMBOLS[battery_charging]='‚ö°'
PL_SYMBOLS[battery_discharging]='Ô®≤'

PL_SYMBOLS[aws_profile]='Ô™è'
PL_SYMBOLS[screen]='üíª'
PL_SYMBOLS[duration]='‚è≥'

PL_SYMBOLS[pwd_separator]='ÓÇ±'
PL_SYMBOLS[pwd_trimmed]='Ôõó'
